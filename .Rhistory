#install.packages("PerformanceAnalytics")
library(quantmod)
library(PerformanceAnalytics)
symbols <- c("AAPL", "MSFT", "TSLA")
getSymbols(symbols, src = "yahoo", from = "2019-01-01", to = "2024-12-31")
returns_aapl <- dailyReturn(Ad(AAPL))
returns_msft <- dailyReturn(Ad(MSFT))
returns_tsla <- dailyReturn(Ad(TSLA))
sd(returns_aapl)
sd(returns_msft)
sd(returns_tsla)
maxDrawdown(returns_aapl)
maxDrawdown(returns_msft)
maxDrawdown(returns_tsla)
SharpeRatio(returns_aapl, Rf = 0)
SharpeRatio(returns_msft, Rf = 0)
SharpeRatio(returns_tsla, Rf = 0)
VaR(returns_aapl, p = 0.95, method = "gaussian")
VaR(returns_msft, p = 0.95, method = "gaussian")
VaR(returns_tsla, p = 0.95, method = "gaussian")
returns_aapl <- dailyReturn(Ad(AAPL))
returns_msft <- dailyReturn(Ad(MSFT))
returns_tsla <- dailyReturn(Ad(TSLA))
cat("Standard Deviation of AAPL:", sd_aapl, "\n")
#install.packages("PerformanceAnalytics")
library(quantmod)
library(PerformanceAnalytics)
symbols <- c("AAPL", "MSFT", "TSLA")
getSymbols(symbols, src = "yahoo", from = "2019-01-01", to = "2024-12-31")
returns_aapl <- dailyReturn(Ad(AAPL))
returns_msft <- dailyReturn(Ad(MSFT))
returns_tsla <- dailyReturn(Ad(TSLA))
cat("Standard Deviation of AAPL:", sd_aapl, "\n")
returns_aapl <- dailyReturn(Ad(AAPL))
returns_msft <- dailyReturn(Ad(MSFT))
returns_tsla <- dailyReturn(Ad(TSLA))
cat("Standard Deviation of AAPL:", returns_aapl, "\n")
cat("Standard Deviation of MSFT:", returns_msft, "\n")
cat("Standard Deviation of TSLA:", returns_tsla, "\n")
# Calculate standard deviations
sd_aapl <- sd(returns_aapl)
sd_msft <- sd(returns_msft)
sd_tsla <- sd(returns_tsla)
# Print with labels
cat("Standard Deviation of AAPL:", sd_aapl, "\n")
cat("Standard Deviation of MSFT:", sd_msft, "\n")
cat("Standard Deviation of TSLA:", sd_tsla, "\n")
mdd_aapl <- maxDrawdown(returns_aapl)
mdd_msft <- maxDrawdown(returns_msft)
mdd_tsla <- maxDrawdown(returns_tsla)
cat("Maximum Drawdown of AAPL:", mdd_aapl, "\n")
cat("Maximum Drawdown of MSFT:", mdd_msft, "\n")
cat("Maximum Drawdown of TSLA:", mdd_tsla, "\n")
# Calculate Value at Risk (95%, Gaussian method)
var_aapl <- VaR(returns_aapl, p = 0.95, method = "gaussian")
var_msft <- VaR(returns_msft, p = 0.95, method = "gaussian")
var_tsla <- VaR(returns_tsla, p = 0.95, method = "gaussian")
# Print with labels
cat("95% VaR (Gaussian) of AAPL:", var_aapl, "\n")
cat("95% VaR (Gaussian) of MSFT:", var_msft, "\n")
cat("95% VaR (Gaussian) of TSLA:", var_tsla, "\n")
#install.packages("PerformanceAnalytics")
library(quantmod)
library(PerformanceAnalytics)
symbols <- c("AAPL", "MSFT", "TSLA")
getSymbols(symbols, src = "yahoo", from = "2019-01-01", to = "2024-12-31")
# Calculate standard deviations
sd_aapl <- sd(returns_aapl)
sd_msft <- sd(returns_msft)
sd_tsla <- sd(returns_tsla)
# Print with labels
cat("Standard Deviation of AAPL:", sd_aapl, "\n")
cat("Standard Deviation of MSFT:", sd_msft, "\n")
cat("Standard Deviation of TSLA:", sd_tsla, "\n")
mdd_aapl <- maxDrawdown(returns_aapl)
mdd_msft <- maxDrawdown(returns_msft)
mdd_tsla <- maxDrawdown(returns_tsla)
cat("Maximum Drawdown of AAPL:", mdd_aapl, "\n")
cat("Maximum Drawdown of MSFT:", mdd_msft, "\n")
cat("Maximum Drawdown of TSLA:", mdd_tsla, "\n")
SharpeRatio(returns_aapl, Rf = 0)
SharpeRatio(returns_msft, Rf = 0)
SharpeRatio(returns_tsla, Rf = 0)
# Calculate Value at Risk (95%, Gaussian method)
var_aapl <- VaR(returns_aapl, p = 0.95, method = "gaussian")
var_msft <- VaR(returns_msft, p = 0.95, method = "gaussian")
var_tsla <- VaR(returns_tsla, p = 0.95, method = "gaussian")
# Print with labels
cat("95% VaR (Gaussian) of AAPL:", var_aapl, "\n")
cat("95% VaR (Gaussian) of MSFT:", var_msft, "\n")
cat("95% VaR (Gaussian) of TSLA:", var_tsla, "\n")
sr_aapl <- SharpeRatio(returns_aapl, Rf = 0)
sr_msft <- SharpeRatio(returns_msft, Rf = 0)
sr_tsla <- SharpeRatio(returns_tsla, Rf = 0)
cat("Sharpe Ratio of AAPL:", sr_aapl, "\n")
cat("Sharpe Ratio of MSFT:", sr_msft, "\n")
cat("Sharpe Ratio of TSLA:", sr_tsla, "\n")
SharpeRatio(returns_aapl, Rf = 0)
SharpeRatio(returns_msft, Rf = 0)
SharpeRatio(returns_tsla, Rf = 0)
sr_aapl <- SharpeRatio(returns_aapl, Rf = 0)
sr_msft <- SharpeRatio(returns_msft, Rf = 0)
sr_tsla <- SharpeRatio(returns_tsla, Rf = 0)
cat("Sharpe Ratio of AAPL:", sr_aapl, "\n")
cat("Sharpe Ratio of MSFT:", sr_msft, "\n")
cat("Sharpe Ratio of TSLA:", sr_tsla, "\n")
SharpeRatio(returns_aapl, Rf = 0)
SharpeRatio(returns_msft, Rf = 0)
SharpeRatio(returns_tsla, Rf = 0)
VaR(returns_aapl, p = 0.95, method = "gaussian")
VaR(returns_msft, p = 0.95, method = "gaussian")
VaR(returns_tsla, p = 0.95, method = "gaussian")
# Получить данные S&P 500
getSymbols("^GSPC", src = "yahoo", from = "2019-01-01", to = "2024-12-31")
# Рассчитать доходности
returns_sp500 <- dailyReturn(Ad(GSPC))
# Функция для среднего дохода и риска
calc_metrics <- function(returns) {
c(mean = mean(returns), sd = sd(returns))
}
# Собрать метрики для всех активов
metrics <- rbind(
AAPL = calc_metrics(returns_aapl),
MSFT = calc_metrics(returns_msft),
TSLA = calc_metrics(returns_tsla),
SP500 = calc_metrics(returns_sp500)
)
# Построить график
plot(metrics[, "sd"], metrics[, "mean"],
xlab = "Risk (Standard Deviation)",
ylab = "Return (Mean Daily Return)",
main = "Risk-Return Comparison",
pch = 19, col = c("blue", "green", "red", "black"))
text(metrics[, "sd"], metrics[, "mean"], labels = rownames(metrics), pos = 4)
#install.packages("PerformanceAnalytics")
library(quantmod)
library(PerformanceAnalytics)
symbols <- c("AAPL", "MSFT", "TSLA")
getSymbols(symbols, src = "yahoo", from = "2019-01-01", to = "2024-12-31")
# Calculate standard deviations
sd_aapl <- sd(returns_aapl)
sd_msft <- sd(returns_msft)
sd_tsla <- sd(returns_tsla)
# Print with labels
cat("Standard Deviation of AAPL:", sd_aapl, "\n")
cat("Standard Deviation of MSFT:", sd_msft, "\n")
cat("Standard Deviation of TSLA:", sd_tsla, "\n")
mdd_aapl <- maxDrawdown(returns_aapl)
mdd_msft <- maxDrawdown(returns_msft)
mdd_tsla <- maxDrawdown(returns_tsla)
cat("Maximum Drawdown of AAPL:", mdd_aapl, "\n")
cat("Maximum Drawdown of MSFT:", mdd_msft, "\n")
cat("Maximum Drawdown of TSLA:", mdd_tsla, "\n")
SharpeRatio(returns_aapl, Rf = 0)
SharpeRatio(returns_msft, Rf = 0)
SharpeRatio(returns_tsla, Rf = 0)
# Calculate Value at Risk (95%, Gaussian method)
var_aapl <- VaR(returns_aapl, p = 0.95, method = "gaussian")
var_msft <- VaR(returns_msft, p = 0.95, method = "gaussian")
var_tsla <- VaR(returns_tsla, p = 0.95, method = "gaussian")
# Print with labels
cat("95% VaR (Gaussian) of AAPL:", var_aapl, "\n")
cat("95% VaR (Gaussian) of MSFT:", var_msft, "\n")
cat("95% VaR (Gaussian) of TSLA:", var_tsla, "\n")
